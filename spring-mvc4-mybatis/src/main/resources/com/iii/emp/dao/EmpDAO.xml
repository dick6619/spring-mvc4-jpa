<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iii.emp.dao.EmpDAO">

	<sql id="allColumns">
		empno,
		ename,
		job,
		hiredate,
		sal,
		comm,
		deptno
	</sql>
	
	<sql id="allColumnsWithDept">
		e.empno,
		e.ename,
		e.job,
		e.hiredate,
		e.sal,
		e.comm,
		d.deptno,
		d.dname,
		d.loc
	</sql>
	
	<resultMap type="com.iii.emp.domain.EmpVO" id="emps">
		<id property="empno" column="empno" />
		<result property="ename" column="ename" />
		<result property="job" column="job" />
		<result property="hiredate" column="hiredate" />
		<result property="sal" column="sal" />
		<result property="comm" column="comm" />
		<association property="deptVO" javaType="com.iii.emp.domain.DeptVO">
			<id property="deptno" column="deptno" />
			<result property="dname" column="dname" />
			<result property="loc" column="loc" />
		</association>
	</resultMap>

    <!-- 星號也行 -->
	<select id="getEmps" resultMap="emps">
		SELECT
		<include refid="allColumnsWithDept" />
		FROM EMP2 e, DEPT2 d
		WHERE e.deptno = d.deptno
	</select>
	
<!-- 如bean 命名規則與table欄位定義一致並不用額外撰寫resultMap -->	
<!-- 	<select id="getEmps" resultType="com.iii.emp.domain.EmpVO"> -->
<!-- 		SELECT -->
<!-- 		* -->
<!-- 		FROM EMP2 -->
<!-- 	</select> -->

	<!-- 1. 因有inner bean deptVO, 相關關聯設定在resultMap內，需要使用否則deptVO會是null -->
	<!-- 2. 對應以上，mybatis不像hibernate會自動去搜尋整個部門資訊， 故這邊用JOIN語法，否則dname, loc會null-->
	<select id="getEmp" parameterType="com.iii.emp.domain.EmpVO"  resultMap="emps">
		SELECT
		<include refid="allColumnsWithDept" />
		FROM EMP2 e JOIN DEPT2 d ON e.deptno = d.deptno
		WHERE e.empno = #{empno}
	</select>
	
	<update id="update" parameterType="com.iii.emp.domain.EmpVO">
		UPDATE EMP2
		<set>
			<if test="ename != null">
				ename = #{ename},
			</if>
			<if test="job != null">
				job = #{job},
			</if>
			<if test="hiredate != null">
				hiredate = #{hiredate},
			</if>
			<if test="sal != null">
				sal = #{sal},
			</if>
			<if test="comm != null">
				comm = #{comm},
			</if>
			<if test="deptVO != null and deptVO.deptno !=null ">
				deptno = #{deptVO.deptno}
			</if>
		</set>
		WHERE empno = #{empno}
	</update>


	<delete id="delete" parameterType="com.iii.emp.domain.EmpVO">
		DELETE FROM EMP2
		WHERE
		empno =
		#{empno}
	</delete>


	<insert id="insert" useGeneratedKeys="true" keyProperty="empno" parameterType="com.iii.emp.domain.EmpVO">
		INSERT INTO EMP2 (
		ename, job, hiredate, sal, comm,
		deptno
		) values (
		#{ename},
		#{job},
		#{hiredate},
		#{sal},
		#{comm},
		#{deptVO.deptno}
		)
	</insert>

	<select id="getEmpBySqlLike" parameterType="com.iii.emp.domain.EmpVO" resultMap="emps">
		SELECT
		<include refid="allColumnsWithDept" />
		FROM EMP2 e INNER JOIN DEPT2 d ON e.deptno = d.deptno
		<if test="ename != null">
			WHERE ename like concat('%', #{ename}, '%') 
		</if>
	</select>


</mapper>