<strong>
######################################################################### 
# level: DEBUG、INFO、WARN、ERROR、FATAL
# %d 輸出日誌時間點的日期或時間，指定格式為：%d{yyy-MM-dd HH:mm:ss }。
# %l 輸出日誌事件的發生位置，即輸出日誌訊息的語句處於它所在的類別的第幾行。
# %m 輸出訊息，如log(message)中的message。
# %n 輸出一個列尾符號。
# %p 輸出優先階層，即DEBUG，INFO，WARN，ERROR，FATAL。如果是調用debug()輸出的，則為DEBUG，依此類推。-5p 代表將此字串填滿至 5 個字元,以空白補不足處。
# %r 輸出自應用啟動到輸出該日誌訊息所耗費的毫秒數。
# %t 輸出產生該日誌事件的線程名。
# %r 輸出自應用啟動到輸出該日誌訊息所耗費的毫秒數。
# %f 輸出日誌訊息所屬的類別的類別名。 
# File的appender被設為org.apache.log4j.DailyRollingFileAppender表示Log4j會將日誌檔依日期分開。
#########################################################################  

# rootLogger level is debug and have consoleHandler, fileHandler appender
log4j.rootLogger=INFO, ConsoleHandler, FileHandler
# log4j.rootLogger=INFO, ConsoleHandler

# console logger  
log4j.appender.ConsoleHandler=org.apache.log4j.ConsoleAppender  
log4j.appender.ConsoleHandler.Target=System.out  
log4j.appender.ConsoleHandler.layout = org.apache.log4j.PatternLayout  
log4j.appender.ConsoleHandler.layout.ConversionPattern=[%d{yyyy/MM/dd HH:mm:ss}] [%c] [%p] - %m%n

# file logger 
log4j.appender.FileHandler = org.apache.log4j.DailyRollingFileAppender  
log4j.appender.FileHandler.File = /opt/log.log  
log4j.appender.FileHandler.layout = org.apache.log4j.PatternLayout  
log4j.appender.FileHandler.layout.ConversionPattern =[%d{yyyy/MM/dd HH:mm:ss}] [%c] [%p] - %m%n   
  
# mybatis
#log4j.logger.com.iii.emp.dao=TRACE
log4j.logger.com.iii.emp.dao=DEBUG
</strong>  